{"version":3,"sources":["../../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/binding/selectExtensions.js"],"names":[],"mappings":"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","file":"selectExtensions-compiled.js","sourcesContent":["(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\n"]}