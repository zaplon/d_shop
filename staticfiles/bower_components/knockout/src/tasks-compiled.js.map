{"version":3,"sources":["../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/tasks.js"],"names":[],"mappings":"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","file":"tasks-compiled.js","sourcesContent":["ko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\n"]}