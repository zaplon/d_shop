{"version":3,"sources":["../../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/subscribables/observableArray.js"],"names":[],"mappings":"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","file":"observableArray-compiled.js","sourcesContent":["ko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\n"]}