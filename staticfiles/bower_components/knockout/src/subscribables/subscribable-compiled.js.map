{"version":3,"sources":["../../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/subscribables/subscribable.js"],"names":[],"mappings":"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","file":"subscribable-compiled.js","sourcesContent":["\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = {};\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var a = this._subscriptions[event].slice(0), i = 0, subscription; subscription = a[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self();\n            }\n            ignoreBeforeChange = false;\n            if (self.isDifferent(previousValue, pendingValue)) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n"]}