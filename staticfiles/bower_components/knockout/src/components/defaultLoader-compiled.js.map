{"version":3,"sources":["../../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/components/defaultLoader.js"],"names":[],"mappings":"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","file":"defaultLoader-compiled.js","sourcesContent":["(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n"]}