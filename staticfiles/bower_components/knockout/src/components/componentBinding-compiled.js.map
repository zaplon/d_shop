{"version":3,"sources":["../../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/components/componentBinding.js"],"names":[],"mappings":"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","file":"componentBinding-compiled.js","sourcesContent":["(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\n"]}