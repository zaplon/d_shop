{"version":3,"sources":["../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/utils.domNodeDisposal.js"],"names":[],"mappings":"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","file":"utils.domNodeDisposal-compiled.js","sourcesContent":["\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n"]}