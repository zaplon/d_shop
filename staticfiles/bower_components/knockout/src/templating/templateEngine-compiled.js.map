{"version":3,"sources":["../../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/templating/templateEngine.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG,cAAH,GAAoB,YAAY,CAAG,CAAnC;;AAEA,GAAG,cAAH,CAAkB,SAAlB,CAA4B,sBAA5B,IAAsD,UAAU,cAAV,EAA0B,cAA1B,EAA0C,OAA1C,EAAmD,gBAAnD,EAAqE;AACvH,UAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACH,CAFD;;AAIA,GAAG,cAAH,CAAkB,SAAlB,CAA4B,gCAA5B,IAAgE,UAAU,MAAV,EAAkB;AAC9E,UAAM,IAAI,KAAJ,CAAU,yCAAV,CAAN;AACH,CAFD;;AAIA,GAAG,cAAH,CAAkB,SAAlB,CAA4B,oBAA5B,IAAoD,UAAS,QAAT,EAAmB,gBAAnB,EAAqC;AACrF;AACA,QAAI,OAAO,QAAP,IAAmB,QAAvB,EAAiC;AAC7B,2BAAmB,oBAAoB,QAAvC;AACA,YAAI,OAAO,iBAAiB,cAAjB,CAAgC,QAAhC,CAAX;AACA,YAAI,CAAC,IAAL,EACI,MAAM,IAAI,KAAJ,CAAU,kCAAkC,QAA5C,CAAN;AACJ,eAAO,IAAI,GAAG,eAAH,CAAmB,UAAvB,CAAkC,IAAlC,CAAP;AACH,KAND,MAMO,IAAK,SAAS,QAAT,IAAqB,CAAtB,IAA6B,SAAS,QAAT,IAAqB,CAAtD,EAA0D;AAC7D;AACA,eAAO,IAAI,GAAG,eAAH,CAAmB,iBAAvB,CAAyC,QAAzC,CAAP;AACH,KAHM,MAIH,MAAM,IAAI,KAAJ,CAAU,4BAA4B,QAAtC,CAAN;AACP,CAbD;;AAeA,GAAG,cAAH,CAAkB,SAAlB,CAA4B,gBAA5B,IAAgD,UAAU,QAAV,EAAoB,cAApB,EAAoC,OAApC,EAA6C,gBAA7C,EAA+D;AAC3G,QAAI,iBAAiB,KAAK,oBAAL,EAA2B,QAA3B,EAAqC,gBAArC,CAArB;AACA,WAAO,KAAK,sBAAL,EAA6B,cAA7B,EAA6C,cAA7C,EAA6D,OAA7D,EAAsE,gBAAtE,CAAP;AACH,CAHD;;AAKA,GAAG,cAAH,CAAkB,SAAlB,CAA4B,qBAA5B,IAAqD,UAAU,QAAV,EAAoB,gBAApB,EAAsC;AACvF;AACA,QAAI,KAAK,wBAAL,MAAmC,KAAvC,EACI,OAAO,IAAP;AACJ,WAAO,KAAK,oBAAL,EAA2B,QAA3B,EAAqC,gBAArC,EAAuD,MAAvD,EAA+D,aAA/D,CAAP;AACH,CALD;;AAOA,GAAG,cAAH,CAAkB,SAAlB,CAA4B,iBAA5B,IAAiD,UAAU,QAAV,EAAoB,gBAApB,EAAsC,gBAAtC,EAAwD;AACrG,QAAI,iBAAiB,KAAK,oBAAL,EAA2B,QAA3B,EAAqC,gBAArC,CAArB;AACA,QAAI,YAAY,iBAAiB,eAAe,MAAf,GAAjB,CAAhB;AACA,mBAAe,MAAf,EAAuB,SAAvB;AACA,mBAAe,MAAf,EAAuB,aAAvB,EAAsC,IAAtC;AACH,CALD;;AAOA,GAAG,YAAH,CAAgB,gBAAhB,EAAkC,GAAG,cAArC","file":"templateEngine-compiled.js","sourcesContent":["// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n"]}