{"version":3,"sources":["../../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/src/templating/templateRewriting.js"],"names":[],"mappings":";AACA,GAAG,iBAAH,GAAwB,YAAY;AAChC,QAAI,yCAAyC,mIAA7C;AACA,QAAI,4CAA4C,iCAAhD;;AAEA,aAAS,kCAAT,CAA4C,aAA5C,EAA2D;AACvD,YAAI,gBAAgB,GAAG,mBAAH,CAAuB,wBAA3C;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,cAAc,MAAlC,EAA0C,GAA1C,EAA+C;AAC3C,gBAAI,MAAM,cAAc,CAAd,EAAiB,KAAjB,CAAV;AACA,gBAAI,cAAc,cAAd,CAA6B,GAA7B,CAAJ,EAAuC;AACnC,oBAAI,YAAY,cAAc,GAAd,CAAhB;;AAEA,oBAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACjC,wBAAI,uBAAuB,UAAU,cAAc,CAAd,EAAiB,OAAjB,CAAV,CAA3B;AACA,wBAAI,oBAAJ,EACI,MAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;AACP,iBAJD,MAIO,IAAI,CAAC,SAAL,EAAgB;AACnB,0BAAM,IAAI,KAAJ,CAAU,gDAAgD,GAAhD,GAAsD,gCAAhE,CAAN;AACH;AACJ;AACJ;AACJ;;AAED,aAAS,+BAAT,CAAyC,sBAAzC,EAAiE,WAAjE,EAA8E,QAA9E,EAAwF,cAAxF,EAAwG;AACpG,YAAI,wBAAwB,GAAG,mBAAH,CAAuB,kBAAvB,CAA0C,sBAA1C,CAA5B;AACA,2CAAmC,qBAAnC;AACA,YAAI,kCAAkC,GAAG,mBAAH,CAAuB,kBAAvB,CAA0C,qBAA1C,EAAiE,EAAC,kBAAiB,IAAlB,EAAjE,CAAtC;;AAEA;AACA;AACA;AACA,YAAI,mCACA,0EAA0E,+BAA1E,GAA4G,YAA5G,GAA2H,SAAS,WAAT,EAA3H,GAAoJ,IADxJ;AAEA,eAAO,eAAe,gCAAf,EAAiD,gCAAjD,IAAqF,WAA5F;AACH;;AAED,WAAO;AACH,mCAA2B,UAAU,QAAV,EAAoB,cAApB,EAAoC,gBAApC,EAAsD;AAC7E,gBAAI,CAAC,eAAe,qBAAf,EAAsC,QAAtC,EAAgD,gBAAhD,CAAL,EACI,eAAe,iBAAf,EAAkC,QAAlC,EAA4C,UAAU,UAAV,EAAsB;AAC9D,uBAAO,GAAG,iBAAH,CAAqB,6BAArB,CAAmD,UAAnD,EAA+D,cAA/D,CAAP;AACH,aAFD,EAEG,gBAFH;AAGP,SANE;;AAQH,uCAA+B,UAAU,UAAV,EAAsB,cAAtB,EAAsC;AACjE,mBAAO,WAAW,OAAX,CAAmB,sCAAnB,EAA2D,YAAY;AAC1E,uBAAO,gCAAgC,8BAA8B,UAAU,CAAV,CAA9D,EAA4E,kBAAmB,UAAU,CAAV,CAA/F,EAA6G,eAAgB,UAAU,CAAV,CAA7H,EAA2I,cAA3I,CAAP;AACH,aAFM,EAEJ,OAFI,CAEI,yCAFJ,EAE+C,YAAW;AAC7D,uBAAO,gCAAgC,8BAA8B,UAAU,CAAV,CAA9D,EAA4E,kBAAmB,aAA/F,EAA8G,eAAgB,UAA9H,EAA0I,cAA1I,CAAP;AACH,aAJM,CAAP;AAKH,SAdE;;AAgBH,4CAAoC,UAAU,QAAV,EAAoB,QAApB,EAA8B;AAC9D,mBAAO,GAAG,WAAH,CAAe,OAAf,CAAuB,UAAU,OAAV,EAAmB,cAAnB,EAAmC;AAC7D,oBAAI,aAAa,QAAQ,WAAzB;AACA,oBAAI,cAAc,WAAW,QAAX,CAAoB,WAApB,OAAsC,QAAxD,EAAkE;AAC9D,uBAAG,2BAAH,CAA+B,UAA/B,EAA2C,QAA3C,EAAqD,cAArD;AACH;AACJ,aALM,CAAP;AAMH;AAvBE,KAAP;AAyBH,CA5DsB,EAAvB;;AA+DA;AACA,GAAG,YAAH,CAAgB,aAAhB,EAA+B,GAAG,iBAAH,CAAqB,kCAApD","file":"templateRewriting-compiled.js","sourcesContent":["\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n"]}