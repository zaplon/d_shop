{"version":3,"sources":["../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/knockout/Gruntfile.js"],"names":[],"mappings":"AAAA;AACA,OAAO,OAAP,GAAiB,UAAS,KAAT,EAAgB;AAC7B,QAAI,IAAI,MAAM,IAAN,CAAW,CAAnB;;AAEA;AACA,UAAM,UAAN,CAAiB;AACb;AACA,aAAK,MAAM,IAAN,CAAW,QAAX,CAAoB,cAApB,CAFQ;AAGb,mBAAW,oBAHE;AAIb,gBAAQ,UACA,sDADA,GAEA,iDAFA,GAGA,wEAHA,GAIA,SARK;;AAUb,6BAAqB;AACjB,kBAAM;AACF,qBAAK,CACD,+BADC,EAED,kBAFC,EAGD,kBAHC,CADH;AAMF,wBAAQ;AANN;AADW,SAVR;AAoBb,eAAO;AACH,mBAAO,yCADJ;AAEH,iBAAK;AAFF,SApBM;AAwBb,cAAM;AACF,mBAAO,0BADL;AAEF,iBAAK;AAFH,SAxBO;AA4Bb,cAAM;AACF,uBAAW,wBADT;AAEF,kBAAM;AAFJ;AA5BO,KAAjB;;AAkCA,UAAM,YAAN,CAAmB,OAAnB,EAA4B,wBAA5B,EAAsD,UAAU,MAAV,EAAkB;AACpE,YAAI,SAAS,MAAM,MAAN,CAAa,OAAb,CAAb;AACA,YAAI,QAAQ,CAAE,OAAO,KAAT,EAAgB,OAAO,GAAvB,CAAZ;AACA,YAAI,UAAU,EAAE,OAAQ,UAAU,OAApB,EAAd;AACA,UAAE,OAAF,CAAU,KAAV,EAAiB,UAAU,IAAV,EAAgB;AAC7B,gBAAI,MAAM,IAAN,CAAW,MAAX,CAAkB,IAAlB,CAAJ,EACI,MAAM,IAAN,CAAW,MAAX,CAAkB,IAAlB,EAAwB,OAAxB;AACP,SAHD;AAIA,eAAO,CAAC,KAAK,UAAb;AACH,KATD;;AAWA,QAAI,qBAAqB,MAAzB;AACA,UAAM,iBAAN,CAAwB,qBAAxB,EAA+C,qBAA/C,EAAsE,YAAW;AAC7E,YAAI,UAAU,EAAd;AACA,aAAK,KAAL,CAAW,CAAX,EAAc,GAAd,CAAkB,OAAlB,CAA0B,UAAS,QAAT,EAAmB;AACzC,gBAAI,UAAU,MAAM,IAAN,CAAW,IAAX,CAAgB,QAAhB,CAAd;AAAA,gBACI,QAAQ,QAAQ,KAAR,CAAc,OAAd,CADZ;AAEA,kBAAM,OAAN,CAAc,UAAS,IAAT,EAAe,KAAf,EAAsB;AAChC,oBAAI,mBAAmB,IAAnB,CAAwB,IAAxB,CAAJ,EAAmC;AAC/B,4BAAQ,IAAR,CAAa,CAAC,QAAD,EAAY,QAAM,CAAlB,EAAsB,IAAtB,EAA4B,IAA5B,CAAiC,GAAjC,CAAb;AACH;AACJ,aAJD;AAKH,SARD;AASA,YAAI,QAAQ,MAAZ,EAAoB;AAChB,kBAAM,GAAN,CAAU,KAAV,CAAgB,sEAAhB;AACA,kBAAM,GAAN,CAAU,OAAV,CAAkB,QAAQ,IAAR,CAAa,IAAb,CAAlB;AACA,mBAAO,KAAP;AACH;AACJ,KAhBD;;AAkBA,aAAS,oBAAT,CAA8B,wBAA9B,EAAwD;AACpD;AACA,YAAI,MAAJ;AACA,eAAO,qBAAP,GAA+B,UAAS,OAAT,EAAkB;AAAE,qBAAS,OAAT;AAAmB,SAAtE;AACA,aAAK,MAAM,IAAN,CAAW,IAAX,CAAgB,wBAAhB,CAAL;AACA,eAAO,MAAP;AACH;;AAED,aAAS,kBAAT,GAA8B;AAC1B,YAAI,YAAY,MAAM,MAAN,CAAa,WAAb,CAAhB;AAAA,YACI,kBAAkB,CACd,YAAY,eADE,EAEd,YAAY,YAFE,EAGd,qBAAqB,YAAY,sBAAjC,CAHc,EAId,YAAY,aAJE,EAKd,YAAY,gBALE,CADtB;AAAA,YAQI,2BAA2B,MAAM,SAAN,CAAgB,MAAhB,CAAuB,KAAvB,CAA6B,EAA7B,EAAiC,eAAjC,CAR/B;AAAA,YASI,kBAAkB,yBAAyB,GAAzB,CAA6B,UAAS,QAAT,EAAmB;AAC9D,mBAAO,MAAM,IAAN,CAAW,IAAX,CAAgB,OAAO,QAAvB,CAAP;AACH,SAFiB,EAEf,IAFe,CAEV,EAFU,CATtB;;AAaA,eAAO,gBAAgB,OAAhB,CAAwB,aAAxB,EAAuC,MAAM,MAAN,CAAa,aAAb,CAAvC,CAAP;AACH;;AAED,aAAS,UAAT,CAAoB,MAApB,EAA4B;AACxB,YAAI,SAAS,EAAb;AACA,eAAO,IAAP,CAAY,MAAM,MAAN,CAAa,QAAb,CAAZ;AACA,eAAO,IAAP,CAAY,gBAAZ;AACA,eAAO,IAAP,CAAY,mBAAZ;AACA,eAAO,IAAP,CAAY,oBAAZ;AACA,eAAO,IAAP,CAAY,SAAZ;AACA,cAAM,IAAN,CAAW,KAAX,CAAiB,MAAjB,EAAyB,OAAO,IAAP,CAAY,EAAZ,EAAgB,OAAhB,CAAwB,OAAxB,EAAiC,IAAjC,CAAzB;AACH;;AAED,aAAS,QAAT,CAAkB,MAAlB,EAA0B,IAA1B,EAAgC;AAC5B,YAAI,KAAK,QAAQ,kBAAR,CAAT;AACA,YAAI,UAAU;AACV,+BAAmB,wBADT;AAEV,4BAAgB;AAFN,SAAd;AAIA,cAAM,GAAN,CAAU,KAAV,CAAgB,cAAhB;AACA,WAAG,OAAH,CAAW,gCAAgC,oBAA3C,EAAiE,OAAjE,EAA0E,UAAU,GAAV,EAAe,MAAf,EAAuB,MAAvB,EAA+B;AACrG,gBAAI,GAAJ,EAAS;AACL,sBAAM,GAAN,CAAU,KAAV,CAAgB,GAAhB;AACA,qBAAK,KAAL;AACH,aAHD,MAGO;AACH,sBAAM,GAAN,CAAU,EAAV;AACA,sBAAM,IAAN,CAAW,KAAX,CAAiB,MAAjB,EAAyB,CAAC,MAAM,MAAN,CAAa,QAAb,IAAyB,MAA1B,EAAkC,OAAlC,CAA0C,OAA1C,EAAmD,IAAnD,CAAzB;AACA,qBAAK,IAAL;AACH;AACJ,SATD;AAUH;;AAED,UAAM,iBAAN,CAAwB,OAAxB,EAAiC,OAAjC,EAA0C,YAAW;AACjD,YAAI,CAAC,KAAK,UAAV,EAAsB;AAClB,gBAAI,SAAS,KAAK,IAAlB;AACA,gBAAI,KAAK,MAAL,KAAgB,OAApB,EAA6B;AACzB,2BAAW,MAAX;AACH,aAFD,MAEO,IAAI,KAAK,MAAL,KAAgB,KAApB,EAA2B;AAC9B,yBAAS,MAAT,EAAiB,KAAK,KAAL,EAAjB;AACH;AACJ;AACD,eAAO,CAAC,KAAK,UAAb;AACH,KAVD;;AAYA,UAAM,iBAAN,CAAwB,MAAxB,EAAgC,WAAhC,EAA6C,YAAY;AACrD,YAAI,OAAO,KAAK,KAAL,EAAX;AACA,cAAM,IAAN,CAAW,KAAX,CAAiB,EAAE,KAAK,KAAK,MAAZ,EAAoB,MAAM,CAAC,KAAK,IAAN,CAA1B,EAAjB,EACI,UAAU,KAAV,EAAiB,MAAjB,EAAyB,IAAzB,EAA+B;AAC3B,gBAAI,SAAS,GAAI,cAAjB,EAAgC;AAC5B,0BAAM,OAAN,CAAc,KAAd,CAAoB,OAAO,MAA3B;AACA;AACA,yBAAK,IAAL;AACH,iBAJD,MAIO;AACH,sBAAM,GAAN,CAAU,OAAV,CAAkB,OAAO,MAAzB;AACA,oBAAI,KAAJ,EACI,MAAM,GAAN,CAAU,KAAV,CAAgB,OAAO,MAAvB;AACJ,qBAAK,CAAC,KAAN;AACH;AACJ,SAZL;AAcH,KAhBD;;AAkBA,UAAM,YAAN,CAAmB,MAAnB,EAA2B,YAAW;AAClC,YAAI,UAAU,MAAM,MAAN,CAAa,aAAb,CAAd;AAAA,YACI,cAAc,MAAM,MAAN,CAAa,OAAb,CADlB;AAAA,YAEI,aAAa,MAAM,MAAN,CAAa,MAAb,CAFjB;AAGA,cAAM,IAAN,CAAW,IAAX,CAAgB,YAAY,KAA5B,EAAmC,WAAW,KAA9C;AACA,cAAM,IAAN,CAAW,IAAX,CAAgB,YAAY,GAA5B,EAAiC,WAAW,GAA5C;;AAEA,gBAAQ,GAAR,CAAY,kBAAZ;AACA,gBAAQ,GAAR,CAAY,wBAAZ;AACA,gBAAQ,GAAR,CAAY,oBAAoB,WAAW,KAA3C;AACA,gBAAQ,GAAR,CAAY,oBAAoB,WAAW,GAA3C;AACA,gBAAQ,GAAR,CAAY,uBAAZ;AACA,gBAAQ,GAAR,CAAY,iCAAiC,OAAjC,GAA2C,qBAAvD;AACA,gBAAQ,GAAR,CAAY,qBAAqB,OAArB,GAA+B,iBAA/B,GAAmD,OAAnD,GAA6D,IAAzE;AACA,gBAAQ,GAAR,CAAY,yBAAZ;AACA,gBAAQ,GAAR,CAAY,4BAAZ;AACH,KAhBD;;AAkBA;AACA,UAAM,YAAN,CAAmB,SAAnB,EAA8B,CAAC,OAAD,EAAU,qBAAV,EAAiC,OAAjC,EAA0C,MAA1C,CAA9B;AACH,CA5KD","file":"Gruntfile-compiled.js","sourcesContent":["/*global module:false*/\nmodule.exports = function(grunt) {\n    var _ = grunt.util._;\n\n    // Project configuration\n    grunt.initConfig({\n        // Metadata\n        pkg: grunt.file.readJSON('package.json'),\n        fragments: './build/fragments/',\n        banner: '/*!\\n' +\n                ' * Knockout JavaScript library v<%= pkg.version %>\\n' +\n                ' * (c) Steven Sanderson - <%= pkg.homepage %>\\n' +\n                ' * License: <%= pkg.licenses[0].type %> (<%= pkg.licenses[0].url %>)\\n' +\n                ' */\\n\\n',\n\n        checktrailingspaces: {\n            main: {\n                src: [\n                    \"**/*.{js,html,css,bat,ps1,sh}\",\n                    \"!build/output/**\",\n                    \"!node_modules/**\"\n                ],\n                filter: 'isFile'\n            }\n        },\n        build: {\n            debug: './build/output/knockout-latest.debug.js',\n            min: './build/output/knockout-latest.js'\n        },\n        dist: {\n            debug: './dist/knockout.debug.js',\n            min: './dist/knockout.js'\n        },\n        test: {\n            phantomjs: 'spec/runner.phantom.js',\n            node: 'spec/runner.node.js'\n        }\n    });\n\n    grunt.registerTask('clean', 'Clean up output files.', function (target) {\n        var output = grunt.config('build');\n        var files = [ output.debug, output.min ];\n        var options = { force: (target == 'force') };\n        _.forEach(files, function (file) {\n            if (grunt.file.exists(file))\n                grunt.file.delete(file, options);\n        });\n        return !this.errorCount;\n    });\n\n    var trailingSpaceRegex = /[ ]$/;\n    grunt.registerMultiTask('checktrailingspaces', 'checktrailingspaces', function() {\n        var matches = [];\n        this.files[0].src.forEach(function(filepath) {\n            var content = grunt.file.read(filepath),\n                lines = content.split(/\\r*\\n/);\n            lines.forEach(function(line, index) {\n                if (trailingSpaceRegex.test(line)) {\n                    matches.push([filepath, (index+1), line].join(':'));\n                }\n            });\n        });\n        if (matches.length) {\n            grunt.log.error(\"The following files have trailing spaces that need to be cleaned up:\");\n            grunt.log.writeln(matches.join('\\n'));\n            return false;\n        }\n    });\n\n    function getReferencedSources(sourceReferencesFilename) {\n        // Returns the array of filenames referenced by a file like source-references.js\n        var result;\n        global.knockoutDebugCallback = function(sources) { result = sources; };\n        eval(grunt.file.read(sourceReferencesFilename));\n        return result;\n    }\n\n    function getCombinedSources() {\n        var fragments = grunt.config('fragments'),\n            sourceFilenames = [\n                fragments + 'extern-pre.js',\n                fragments + 'amd-pre.js',\n                getReferencedSources(fragments + 'source-references.js'),\n                fragments + 'amd-post.js',\n                fragments + 'extern-post.js'\n            ],\n            flattenedSourceFilenames = Array.prototype.concat.apply([], sourceFilenames),\n            combinedSources = flattenedSourceFilenames.map(function(filename) {\n                return grunt.file.read('./' + filename);\n            }).join('');\n\n        return combinedSources.replace('##VERSION##', grunt.config('pkg.version'));\n    }\n\n    function buildDebug(output) {\n        var source = [];\n        source.push(grunt.config('banner'));\n        source.push('(function(){\\n');\n        source.push('var DEBUG=true;\\n');\n        source.push(getCombinedSources());\n        source.push('})();\\n');\n        grunt.file.write(output, source.join('').replace(/\\r\\n/g, '\\n'));\n    }\n\n    function buildMin(output, done) {\n        var cc = require('closure-compiler');\n        var options = {\n            compilation_level: 'ADVANCED_OPTIMIZATIONS',\n            output_wrapper: '(function() {%output%})();'\n        };\n        grunt.log.write('Compiling...');\n        cc.compile('/**@const*/var DEBUG=false;' + getCombinedSources(), options, function (err, stdout, stderr) {\n            if (err) {\n                grunt.log.error(err);\n                done(false);\n            } else {\n                grunt.log.ok();\n                grunt.file.write(output, (grunt.config('banner') + stdout).replace(/\\r\\n/g, '\\n'));\n                done(true);\n            }\n        });\n    }\n\n    grunt.registerMultiTask('build', 'Build', function() {\n        if (!this.errorCount) {\n            var output = this.data;\n            if (this.target === 'debug') {\n                buildDebug(output);\n            } else if (this.target === 'min') {\n                buildMin(output, this.async());\n            }\n        }\n        return !this.errorCount;\n    });\n\n    grunt.registerMultiTask('test', 'Run tests', function () {\n        var done = this.async();\n        grunt.util.spawn({ cmd: this.target, args: [this.data] },\n            function (error, result, code) {\n                if (code === 127 /*not found*/) {\n                    grunt.verbose.error(result.stderr);\n                    // ignore this error\n                    done(true);\n                } else {\n                    grunt.log.writeln(result.stdout);\n                    if (error)\n                        grunt.log.error(result.stderr);\n                    done(!error);\n                }\n            }\n        );\n    });\n\n    grunt.registerTask('dist', function() {\n        var version = grunt.config('pkg.version'),\n            buildConfig = grunt.config('build'),\n            distConfig = grunt.config('dist');\n        grunt.file.copy(buildConfig.debug, distConfig.debug);\n        grunt.file.copy(buildConfig.min, distConfig.min);\n\n        console.log('To publish, run:');\n        console.log('    git add bower.json');\n        console.log('    git add -f ' + distConfig.debug);\n        console.log('    git add -f ' + distConfig.min);\n        console.log('    git checkout head');\n        console.log('    git commit -m \\'Version ' + version + ' for distribution\\'');\n        console.log('    git tag -a v' + version + ' -m \\'Add tag v' + version + '\\'');\n        console.log('    git checkout master');\n        console.log('    git push origin --tags');\n    });\n\n    // Default task.\n    grunt.registerTask('default', ['clean', 'checktrailingspaces', 'build', 'test']);\n};\n"]}