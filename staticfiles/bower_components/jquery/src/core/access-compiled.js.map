{"version":3,"sources":["../../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/jquery/src/core/access.js"],"names":[],"mappings":"AAAA,OAAQ,CACP,SADO,CAAR,EAEG,UAAU,MAAV,EAAmB;;AAEtB;;AAEA;AACA;;AACA,KAAI,SAAS,UAAU,KAAV,EAAiB,EAAjB,EAAqB,GAArB,EAA0B,KAA1B,EAAiC,SAAjC,EAA4C,QAA5C,EAAsD,GAAtD,EAA4D;AACxE,MAAI,IAAI,CAAR;AAAA,MACC,MAAM,MAAM,MADb;AAAA,MAEC,OAAO,OAAO,IAFf;;AAIA;AACA,MAAK,OAAO,IAAP,CAAa,GAAb,MAAuB,QAA5B,EAAuC;AACtC,eAAY,IAAZ;AACA,QAAM,CAAN,IAAW,GAAX,EAAiB;AAChB,WAAQ,KAAR,EAAe,EAAf,EAAmB,CAAnB,EAAsB,IAAK,CAAL,CAAtB,EAAgC,IAAhC,EAAsC,QAAtC,EAAgD,GAAhD;AACA;;AAEF;AACC,GAPD,MAOO,IAAK,UAAU,SAAf,EAA2B;AACjC,eAAY,IAAZ;;AAEA,OAAK,CAAC,OAAO,UAAP,CAAmB,KAAnB,CAAN,EAAmC;AAClC,UAAM,IAAN;AACA;;AAED,OAAK,IAAL,EAAY;;AAEX;AACA,QAAK,GAAL,EAAW;AACV,QAAG,IAAH,CAAS,KAAT,EAAgB,KAAhB;AACA,UAAK,IAAL;;AAED;AACC,KALD,MAKO;AACN,YAAO,EAAP;AACA,UAAK,UAAU,IAAV,EAAgB,GAAhB,EAAqB,KAArB,EAA6B;AACjC,aAAO,KAAK,IAAL,CAAW,OAAQ,IAAR,CAAX,EAA2B,KAA3B,CAAP;AACA,MAFD;AAGA;AACD;;AAED,OAAK,EAAL,EAAU;AACT,WAAQ,IAAI,GAAZ,EAAiB,GAAjB,EAAuB;AACtB,QACC,MAAO,CAAP,CADD,EACa,GADb,EACkB,MACjB,KADiB,GAEjB,MAAM,IAAN,CAAY,MAAO,CAAP,CAAZ,EAAwB,CAAxB,EAA2B,GAAI,MAAO,CAAP,CAAJ,EAAgB,GAAhB,CAA3B,CAHD;AAKA;AACD;AACD;;AAED,SAAO,YACN,KADM;;AAGN;AACA,SACC,GAAG,IAAH,CAAS,KAAT,CADD,GAEC,MAAM,GAAI,MAAO,CAAP,CAAJ,EAAgB,GAAhB,CAAN,GAA8B,QANhC;AAOA,EAtDD;;AAwDA,QAAO,MAAP;AAEC,CAlED","file":"access-compiled.js","sourcesContent":["define( [\n\t\"../core\"\n], function( jQuery ) {\n\n\"use strict\";\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\nreturn access;\n\n} );\n"]}