{"version":3,"sources":["../../../../../../../../../../home/jan/workspace/django_shop/shop/staticfiles/bower_components/jquery/src/callbacks.js"],"names":[],"mappings":"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","file":"callbacks-compiled.js","sourcesContent":["define( [\n\t\"./core\",\n\t\"./var/rnotwhite\"\n], function( jQuery, rnotwhite ) {\n\n\"use strict\";\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\nreturn jQuery;\n} );\n"]}